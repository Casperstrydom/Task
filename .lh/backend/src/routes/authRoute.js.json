{
    "sourceFile": "backend/src/routes/authRoute.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1757315381182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1757315381182,
            "name": "Commit-0",
            "content": "const express = require(\"express\");\r\nconst User = require(\"../models/User\");\r\nconst router = express.Router();\r\n\r\n/**\r\n * @swagger\r\n * /auth/register:\r\n *   post:\r\n *     summary: Register a new user\r\n *     tags:\r\n *       - Auth\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - email\r\n *               - password\r\n *             properties:\r\n *               email:\r\n *                 type: string\r\n *                 example: \"user@example.com\"\r\n *               password:\r\n *                 type: string\r\n *                 example: \"password123\"\r\n *     responses:\r\n *       201:\r\n *         description: User created\r\n */\r\nrouter.post(\"/register\", async (req, res) => {\r\n  const { email, password } = req.body;\r\n  if (!email || !password) return res.status(400).json({ error: \"Email and password required\" });\r\n  const user = await User.create({ email, password });\r\n  res.status(201).json(user);\r\n});\r\n\r\n/**\r\n * @swagger\r\n * /auth/login:\r\n *   post:\r\n *     summary: Login user\r\n *     tags:\r\n *       - Auth\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - email\r\n *               - password\r\n *             properties:\r\n *               email:\r\n *                 type: string\r\n *               password:\r\n *                 type: string\r\n *     responses:\r\n *       200:\r\n *         description: Logged in successfully\r\n *       401:\r\n *         description: Invalid credentials\r\n */\r\nrouter.post(\"/login\", async (req, res) => {\r\n  const { email, password } = req.body;\r\n  const user = await User.findOne({ email });\r\n  if (!user || user.password !== password) return res.status(401).json({ error: \"Invalid credentials\" });\r\n  res.json({ message: \"Logged in\", user });\r\n});\r\n\r\nmodule.exports = router;\r\n"
        }
    ]
}